name: Build and deploy to ECR
on:
  push:
    branches:
      - main
jobs:
  build-backend-node:
    name: Build backend node image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_WILCO }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_WILCO }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: public.ecr.aws/v0a2l7y2
          ECR_REPOSITORY: wilco/anythink-backend-node
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f .wilco-helpers/Dockerfile.node.image .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  build-frontend-react:
    name: Build frontend react image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_WILCO }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_WILCO }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: public.ecr.aws/v0a2l7y2
          ECR_REPOSITORY: wilco/anythink-frontend-react
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f .wilco-helpers/Dockerfile.react.image .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  build-backend-python:
    name: Build backend python image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_WILCO }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_WILCO }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: public.ecr.aws/v0a2l7y2
          ECR_REPOSITORY: wilco/anythink-backend-python
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f .wilco-helpers/Dockerfile.python.image .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  build-backend-rails:
    name: Build backend rails image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_WILCO }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_WILCO }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: public.ecr.aws/v0a2l7y2
          ECR_REPOSITORY: wilco/anythink-backend-rails
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f .wilco-helpers/Dockerfile.rails.image .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

